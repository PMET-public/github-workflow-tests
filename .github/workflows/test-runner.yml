name: khb test

on:
  push:

env:
  # set a default terminal for various cmds that expect it
  TERM: xterm
  # COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH }}
  # slack_url: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  run-CI-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest
        value: [true]
    env:
      debug: ${{ matrix.value }}
      SLACK_WEBHOOK_URL_FOR_TMATE_FROM_GITHUB_WORKFLOW: ${{ secrets.SLACK_WEBHOOK_URL_FOR_TMATE_FROM_GITHUB_WORKFLOW }}
      TMATE_AUTHORIZED_KEYS_URL: ${{ secrets.TMATE_AUTHORIZED_KEYS_URL }}
    steps:
      - run: |
          export new_tag="update"
          echo "$new_tag" > /tmp/test
      - name: create release
        if: ${{ success() }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: ${{ github.ref }}
          draft: false
          prerelease: true
          tag_name: ${{ env.new_tag }}1
      - name: upload release asset
        if: ${{ success() }}
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`.
          # See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /tmp/test
          asset_name: test
          asset_content_type: text/plain
      - name: keep alive to debug
        if: ${{ failure() }}
        uses: PMET-public/action-tmate@master
